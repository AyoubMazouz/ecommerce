generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

enum Stat {
  CHART
  CHECKED_OUT
  CONFIRMED
  DELIVERED
}

model User {
  id        String    @id @default(uuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt()
  role      Role      @default(USER)
  firstName String
  lastName  String
  email     String    @unique
  password  String
  phone     Int?
  address   String?
  favorites Product[]
  reviews   Review[]
  orders    Order[]

  @@index([id, email])
}

model Category {
  id       String    @id @default(uuid())
  name     String
  products Product[]
}

model Product {
  id             String           @id @default(uuid())
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt()
  title          String
  brand          String
  description    String
  price          Int
  tags           String?
  quantity       Int?             @default(0)
  discount       Int?             @default(0)
  published      Boolean?         @default(false)
  categoryId     String
  category       Category         @relation(fields: [categoryId], references: [id])
  images         Images[]
  reviews        Review[]
  orderedProduct OrderedProduct[]
  user           User?            @relation(fields: [userId], references: [id])
  userId         String?

  @@index([id, title, brand, price, categoryId])
}

model Images {
  id        String  @id @default(uuid())
  name      String
  type      String
  path      String
  productId String
  product   Product @relation(fields: [productId], references: [id])
}

model Review {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()
  rating    Int
  comment   String?
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  productId String
  product   Product  @relation(fields: [productId], references: [id])

  @@index([rating])
}

model OrderedProduct {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  quantity  Int
  orderId   String
  Order     Order    @relation(fields: [orderId], references: [id])
  productId String
  product   Product  @relation(fields: [productId], references: [id])
}

model Order {
  id        String           @id @default(uuid())
  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt()
  user      User             @relation(fields: [userId], references: [id])
  userId    String
  products  OrderedProduct[]
  stat      Stat             @default(CHART)

  @@index([id, userId, stat])
}
